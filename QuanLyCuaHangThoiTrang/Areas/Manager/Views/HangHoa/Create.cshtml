@model QuanLyCuaHangThoiTrang.Model.HangHoa

@{
    ViewBag.Title = "THÊM MỚI HÀNG HÓA";
    ViewBag.SubTitle = "Nhập đầy đủ các trường thông tin yêu cầu ở phía dưới";
}

<div class="card">
    <div class="form-horizontal">
        <div>
            <div class="pull-left">
                <p class="card-title-heading" id="pageTitle">Hàng Hóa</p>
            </div>
            <div class="pull-right">
                <button class="btn btn-sm btn-success btn-xs btn-push" id="large-button" onclick="location.href='@Url.Action("Index")'">
                    <i class="fas fa-backward"></i>
                    <span style="margin: 15px 10px !important;">Trở lại</span>
                </button>
            </div>
            <div class="clearfix"></div>
        </div>
        <hr />
        @using (Html.BeginForm("Create", "HangHoa", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="grid-container" style="grid-template-columns: 70% 30%">
                <div class="grid-container" style="grid-template-columns: 50% 50%">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TenHangHoa, htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.TenHangHoa, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.TenHangHoa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MaLoaiHangHoa, "Loại Hàng Hóa", htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.DropDownList("MaLoaiHangHoa", null, htmlAttributes: new { @class = "form-control minimal", @required = "required", @id = "maLoaiHangHoa" })
                            @Html.ValidationMessageFor(model => model.MaLoaiHangHoa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DonViTinh, htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.DonViTinh, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DonViTinh, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.GiaBan, "Giá Bán (VNĐ)", htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GiamGia,"Giảm Giá (thập phân)", htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.GiamGia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GiamGia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ThuongHieu, htmlAttributes: new { @class = "control-label custom-label " })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.ThuongHieu, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ThuongHieu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ThoiGianBaoHanh, "Thời Gian Bảo Hành (Tháng)", htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.ThoiGianBaoHanh, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ThoiGianBaoHanh, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label custom-label required" })
                        <div class="col-md-10 custom-input">
                            @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div>
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label custom-label required" })*@
                        <div class="col-md-10 custom-input fileinput fileinput-new" data-provides="fileinput">
                            <div id="img_preview" class="fileinput-preview thumbnail" name="hinhanh" data-trigger="fileinput" style="width: 210px; height: 160px;">
                            </div>
                            <div>
                                <span class="btn btn-info btn-file">
                                    <input type="file" name="HinhAnh" id="HinhAnh" accept="image/*">
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 custom-input">
                    <input type="submit" value="Thêm" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>
<script>
    $("#HinhAnh").change(function () {
        if (typeof (FileReader) != "undefined") {
            var dvPreview = $("#img_preview");
            dvPreview.html("");
            $($(this)[0].files).each(function () {
                var file = $(this);
                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = $("<img />");
                    img.attr("style", "width: 200px; height:150px");
                    img.attr("src", e.target.result);
                    dvPreview.append(img);
                }
                reader.readAsDataURL(file[0]);
            });
        } else {
            alert("This browser does not support HTML5 FileReader.");
        }
    });
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#hinhanh')
                    .attr('src', e.target.result)
                    .width(340)
                    .height(300);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

